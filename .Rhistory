inner_join(df, by = "Customer.Name" )
inner_join(M, by = "Customer.Name"
RFM = R %>%
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = latest - max(Order.Date) )
df %>%
filter(latest - Order.Date <= 365) %>%
group_by(Customer.Name) %>%
summarise(f = n())
M = df %>%
group_by(Customer.Name, ) %>%
summarise(M = sum(Sales))
RFM = R %>%
inner_join(df, by = "Customer.Name") %>%
inner_join(M, by = "Customer.Name")
RFM
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = latest - max(Order.Date) )
f = df %>%
filter(latest - Order.Date <= 365) %>%
group_by(Customer.Name) %>%
summarise(f = n())
M = df %>%
group_by(Customer.Name, ) %>%
summarise(M = sum(Sales))
RFM = R %>%
inner_join(f, by = "Customer.Name") %>%
inner_join(M, by = "Customer.Name")
RFM
f = df %>%
group_by(Customer.Name) %>%
summarise(f = sum(latest - Order.Date <= 365))
f
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = latest - max(Order.Date) )
f = df %>%
group_by(Customer.Name) %>%
summarise(f = sum(latest - Order.Date <= 365))
M = df %>%
group_by(Customer.Name, ) %>%
summarise(M = sum(Sales))
RFM = R %>%
inner_join(f, by = "Customer.Name") %>%
inner_join(M, by = "Customer.Name")
f
RFM
RFM %>%
select(R) %>%
hist()
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = int(latest - max(Order.Date)))
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = as.integer(latest - max(Order.Date)))
f = df %>%
group_by(Customer.Name) %>%
summarise(f = sum(latest - Order.Date <= 365))
M = df %>%
group_by(Customer.Name, ) %>%
summarise(M = sum(Sales))
RFM = R %>%
inner_join(f, by = "Customer.Name") %>%
inner_join(M, by = "Customer.Name")
RFM %>%
select(R) %>%
hist()
RFM %>%
select(R)
RFM %>%
select(R) %>%
mean()
RFM %>%
select(R) %>%
summarise(quantile(0.9))
RFM %>%
select(R) %>%
summarise(quantile(R,probs = 0,9))
RFM %>%
select(R) %>%
summarise(quantile(R,probs = 0.9))
RFM %>%
select(R) %>%
summarise(quantile(R,probs = 0.1))
RFM
RFM %>%
group_by(Customer.Name) %>%
summarise(R = "高")
RFM %>%
group_by(Customer.Name) %>%
summarise(R = "高" if R >= mean(R))
RFM %>%
group_by(Customer.Name) %>%
summarise(R = "高" if R >= mean(R))
RFM %>%
group_by(Customer.Name) %>%
summarise(R = ifelse(R >= mean(R), "高","低"))
RFM %>%
summarise(R = ifelse(R >= mean(R), "高","低"))
RFM %>%
summarise(Customer.Name,
R = ifelse(R >= mean(R), "高","低"),
f = ifelse(f >= mean(f), "高","低"),
M = ifelse(M >= mean(M), "高","低"))
user_rating = RFM %>%
summarise(Customer.Name,
R = ifelse(R >= mean(R), "高","低"),
f = ifelse(f >= mean(f), "高","低"),
M = ifelse(M >= mean(M), "高","低"))
High_value = user_rating %>%
filter(R =="高", f = "高", M = "高")
High_value = user_rating %>%
filter(R =="高", f == "高", M == "高")
High_value
filter(R =="高"）
filter(R =="高"）
user_rating %>%
filter(R =="高")
user_rating %>%
filter(R =="高") %>%
mutate(用户分类  = 1)
user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
))
user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
.defalt = "重要挽留"
))
user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
TRUE = "重要挽留"
user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
TRUE ~ "重要挽留"
))
table(user_rating)
table(head(user_rating,5))
kabble(head(user_rating,5))
library(kable)
library(knitr::kable)
install.packages("knitr")
library(knitr)
summary(df)
summary(df)
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
kabble(head(user_rating,5))
user_rating = user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
TRUE ~ "重要挽留"
))
kabble(head(user_rating,5))
kable(head(user_rating,5))
kable(head(user_rating,5), format = "html")
```{r,echo=FALSE}
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
```{r,echo=FALSE,eval=FALSE}
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
```{r,echo=FALSE,eval=FALSE, warning=FALSE}
df = read.csv(file = "Sample - Superstore.csv")
summary(df)
df = df %>%
select(-c(Postal.Code,))%>%
mutate(Order.Date = mdy(Order.Date), Ship.Date = mdy(Ship.Date))
df = df[complete.cases(df),]
df = df %>%
mutate(Year = as.factor(year(Order.Date)),
Month = month(Order.Date, label = TRUE)) %>%
select(Row.ID, Order.ID, Order.ID, Year, Month, everything())
df = df %>%
select(-c(Postal.Code))%>%
mutate(Order.Date = mdy(Order.Date), Ship.Date = mdy(Ship.Date))
df = read.csv(file = "Sample - Superstore.csv")
summary(df)
df = df %>%
select(-c(Postal.Code))%>%
mutate(Order.Date = mdy(Order.Date), Ship.Date = mdy(Ship.Date))
df = df[complete.cases(df),]
df = df %>%
mutate(Year = as.factor(year(Order.Date)),
Month = month(Order.Date, label = TRUE)) %>%
select(Row.ID, Order.ID, Order.ID, Year, Month, everything())
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
df = read.csv(file = "Sample - Superstore.csv")
summary(df)
df = df %>%
select(-c(Postal.Code)) %>%
mutate(Order.Date = mdy(Order.Date), Ship.Date = mdy(Ship.Date))
df = df[complete.cases(df),]
df = df %>%
mutate(Year = as.factor(year(Order.Date)),
Month = month(Order.Date, label = TRUE)) %>%
select(Row.ID, Order.ID, Order.ID, Year, Month, everything())
df %>%
select(Row.ID, Order.ID, Customer.ID) %>%
summarise_all(n_distinct)
df %>%
select(Row.ID, Order.ID, Customer.ID) %>%
summarise_all(n_distinct) %>%
kable()
df %>%
select(Row.ID, Order.ID, Customer.ID) %>%
summarise_all(n_distinct) %>%
kable(format = "markdown")
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
df %>%
filter(Year == 2018) %>%
group_by(Product.Name) %>%
summarise(total_quan = sum(Quantity),
total_profit = sum(Profit)) %>%
arrange(desc(total_profit)) %>%
head(5) %>%
kable(format = "markdown")
summary(df)
kable(summary(df))
df = read.csv(file = "Sample - Superstore.csv")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
info
library(arules)
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(arules)
library(tidyverse)
library(ggplot2)
library(lubridate,ggpubr)
library(showtext)
theme_set(theme_classic())
showtext_auto()
library(knitr)
df = read.csv(file = "Sample - Superstore.csv")
df = df %>%
select(-c(Postal.Code)) %>%
mutate(Order.Date = mdy(Order.Date), Ship.Date = mdy(Ship.Date))
df = df[complete.cases(df),]
df = df %>%
mutate(Year = as.factor(year(Order.Date)),
Month = month(Order.Date, label = TRUE)) %>%
select(Row.ID, Order.ID, Order.ID, Year, Month, everything())
df %>%
select(Row.ID, Order.ID, Customer.ID) %>%
summarise_all(n_distinct) %>%
kable(format = "markdown")
df %>%
filter(Year == 2018) %>%
group_by(Product.Name) %>%
summarise(total_quan = sum(Quantity),
total_profit = sum(Profit)) %>%
arrange(desc(total_profit)) %>%
head(5) %>%
kable(format = "markdown")
df %>%
filter(Year == 2018) %>%
group_by(Product.Name) %>%
summarise(total = sum(Quantity), profit = sum(Profit)) %>%
arrange(desc(total)) %>%
head(5) %>%
kable(format = "markdown")
df %>%
group_by(year = year(Order.Date)) %>%
summarise(total_profit = sum(Profit)) %>%
summarise(year,  total_profit, pct_changed = 100* (total_profit-lag(total_profit)) / lag(total_profit)) %>%
ggplot(aes(x = year))+
geom_col(aes(y = total_profit), fill = "blue", group =1)+
geom_point(aes(y = pct_changed*2000))+
geom_line(aes(y = pct_changed*2000), group = 1)+
scale_y_continuous(sec.axis = sec_axis(~./2000, name ="同比"))
df %>%
filter(Year %in% c(2016,2017,2018)) %>%
group_by(Year, Month) %>%
summarise(month_profit = sum(Profit),
month_sales = sum(Sales),
gross_margin = 100*(month_profit/month_sales)) %>%
arrange(Month) %>%
ggplot(aes(x = Month))+
geom_col(aes(y = month_profit, fill = Year), position = "dodge")
df %>%
filter(Year %in% c(2016,2017,2018)) %>%
group_by(Year, Month) %>%
summarise(month_profit = sum(Profit),
month_sales = sum(Sales),
gross_margin = 100*(month_profit/month_sales)) %>%
ungroup(Year) %>%
group_by(Month) %>%
arrange(Month) %>%
mutate(pct_change  = 100*(month_profit - lag(month_profit)) / lag(month_profit)) %>%
ggplot(aes(x = Month))+
geom_col(aes(y = pct_change, fill = Year), position = "dodge")
df %>%
filter(Year %in% c(2016,2017,2018)) %>%
group_by(Year, Region) %>%
summarise(month_profit = sum(Profit),
month_sales = sum(Sales),
gross_margin = 100*(month_profit/month_sales)) %>%
ungroup(Year) %>%
group_by(Region) %>%
arrange(Region) %>%
mutate(pct_change  = 100*(month_profit - lag(month_profit)) / lag(month_profit)) %>%
ggplot(aes(x = Region))+
geom_col(aes(y = pct_change, fill = Year), position = "dodge")
df %>%
filter(Region %in% c("Central", "South")) %>%
group_by(Year,Sub.Category) %>%
summarise(profit = sum(Profit)) %>%
ggplot(aes(x = Sub.Category))+
geom_col(aes(y = profit, fill= Year), position = "dodge")+
theme(axis.text.x = element_text(angle = 90))
sub.factor = df %>%
filter(Year %in% c(2017,2018)) %>%
group_by(Year = as.character(Year), Sub.Category) %>%
summarise(month_profit = sum(Profit)) %>%
ungroup(Year) %>%
group_by(Sub.Category) %>%
arrange(Sub.Category) %>%
mutate(pct_change  = 100*(month_profit - lag(month_profit)) / lag(month_profit)) %>%
filter(!is.na(pct_change)) %>%
arrange(pct_change) %>%
pull(Sub.Category)
df %>%
filter(Year %in% c(2016,2017,2018),
Sub.Category != "Supplies") %>%
group_by(Year = as.character(Year), Sub.Category) %>%
summarise(month_profit = sum(Profit),
month_sales = sum(Sales),
gross_margin = 100*(month_profit/month_sales)) %>%
ungroup(Year) %>%
group_by(Sub.Category) %>%
arrange(Sub.Category) %>%
mutate(pct_change  = 100*(month_profit - lag(month_profit)) / lag(month_profit),
Sub.Category = factor(Sub.Category,sub.factor )) %>%
ggplot(aes(y = Sub.Category))+
geom_col(aes(x =  pct_change, fill = Year), position = "dodge")
info = df %>%
filter(Region %in% c("Central", "South"),
Year == 2018 | Year == 2017,
Sub.Category %in% c("Tables","Binders","Machines", "Copiers")) %>%
group_by(Year, Sub.Category) %>%
summarise(Quantity = sum(Quantity),
sales = sum(Sales),
mean_dis = mean(Discount),
profit = sum(Profit),
gm = profit/sales) %>%
arrange(Sub.Category)
profit = info %>%
ggplot(aes(x = Sub.Category))+
geom_col(aes(y = profit, fill = Year), position ="dodge")
quan = info %>%
ggplot(aes(x = Sub.Category))+
geom_col(aes(y = Quantity, fill = Year),position ="dodge" )
sales  = info%>%
ggplot(aes(x = Sub.Category))+
geom_col(aes(y = sales, fill = Year), position ="dodge")
info %>%
kable(format = "markdown")
info %>%
ggplot(aes(x = Year))+
geom_col(aes(y = sales), fill = "blue")+
geom_point(aes(y = profit*4), color = "red")+
geom_line(aes(y = profit*4), color = "red", group = 1)+
scale_y_continuous(sec.axis = sec_axis(~./4, name = "Profits"))+
facet_grid(~Sub.Category)
df %>%
group_by(Product.Name) %>%
summarise(total = sum(Quantity), profit = sum(Profit)) %>%
arrange(desc(total)) %>%
head(5) %>%
kable(format = "markdown")
latest = max(df$Order.Date) ## 最近时长
R = df %>%
group_by(Customer.Name) %>%
summarise(R = as.integer(latest - max(Order.Date)))
f = df %>%
group_by(Customer.Name) %>%
summarise(f = sum(latest - Order.Date <= 365))
M = df %>%
group_by(Customer.Name, ) %>%
summarise(M = sum(Sales))
RFM = R %>%
inner_join(f, by = "Customer.Name") %>%
inner_join(M, by = "Customer.Name")
user_rating = RFM %>%
summarise(Customer.Name,
R = ifelse(R >= mean(R), "高","低"),
f = ifelse(f >= mean(f), "高","低"),
M = ifelse(M >= mean(M), "高","低"))
user_rating = user_rating %>%
filter(M =="高") %>%
mutate(用户分类  = case_when(R == "高" & f == "高" ~ "重要价值",
R == "低" & f == "高" ~ "重要保持",
R == "高" & f == "低" ~ "重要发展",
TRUE ~ "重要挽留"
))
kable(head(user_rating,5), format = "markdown")
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules")
rules = rules[rules$lift >1,]
rules = rules[rules$lift >1,]
rules = rules[rules.lift >1,]
rules = rules[rules$lift >1,]
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules")
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules")
rules$lift
rules = data.frame(apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules"))
#### Select only lift that bigger than 1
```{r message=FALSE}
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = data.frame(apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules"))
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = data.frame(apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules"))
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules")
rules = rules[rules$lift >1,]
rules
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules") %>%
inspect()
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules") %>%
inspect()
rules = rules[rules$lift >1,]
kable(rules, format = "markdown")
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules") %>%
inspect()
rules = rules[rules$lift >1,]
kable(rules, format = "markdown")
Tran = df %>%
filter(Year == 2018) %>%
select(Order.ID, Sub.Category) %>%
transactions(format = "long", col = c("Order.ID", "Sub.Category"))
rules = apriori(Tran, parameter = list(supp = 0.02, conf = 0.2 ), target = "rules") %>%
inspect()
rules = rules[rules$lift >1,]
kable(rules, format = "markdown")
